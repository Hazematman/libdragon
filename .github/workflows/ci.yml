name: Build

on:
  # For default branch, wait for the "Docker Build" workflow instead so that
  # we will run this against the latest image.
  push:
    branches-ignore:
      - 'trunk'
  pull_request:

  workflow_run:
    workflows: ["Docker Build"]
    branches:
      - trunk
    types:
      - completed

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # We first compare the default branch to the event commit. In case this is
      # the default branch, this should return 0, skipping the build and using
      # the latest image from "Docker Build"
      - name: Compare files to default branch
        uses: ./.github/actions/path-diff
        id: path_diff
        with:
          base: ${{ format('refs/remotes/origin/{0}', github.event.repository.default_branch) }}
          head: ${{ github.sha }}

      # Build the toolchain if toolchain files changed w.r.t default which is
      # where we release the images and we can use from registry o/w
      - name: Set up Docker Buildx
        if: ${{ steps.path_diff.outputs.changed == 1 }}
        uses: docker/setup-buildx-action@v1

      - name: Build image
        if: ${{ steps.path_diff.outputs.changed == 1 }}
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: ghcr.io/${{ github.actor }}/libdragon:latest
          load: true
          cache-from: type=gha

      # As we have a "latest" tagged image now, we can use that to run build.sh
      # if it is built in the previous step. o/w it will be downloaded from the
      # registry. Then verify everything is building properly
      - name: Build libdragon
        run: |
          docker run \
          --mount type=bind,source=$(pwd),target=/libdragon \
          --workdir=/libdragon \
          ghcr.io/${{ github.actor }}/libdragon:latest \
          ./build.sh
